z=(175-164)/sqrt(46.16)
sqrt(46.16)
z=(175-164)/sqrt(46.16)
prob175 <- pnorm(z)
prob <- round(prob175*100,0)
z=(175-164)/sqrt(46.16)
prob175 <- pnorm(z)
prob175 <- round(prob175*100,0)
curve(pnorm(175))
probtaller175
prob175
prob175 <- round(prob175*100,1)
probtaller175 <- 100-prob175
prob175
prob175 <- pnorm(z)
prob175 <- round(prob175*100,1)
probtaller175 <- 100-prob175
probtaller175
help(pnorm)
curve(pnorm(mean=164, sd=sqrt(46.16)))
curve(z, pnorm(mean=164, sd=sqrt(46.16)))
curve(pnorm(q, mean=164, sd=sqrt(46.16)))
curve(pnorm(z, mean=164, sd=sqrt(46.16)))
curve(pnorm(x, mean=164, sd=sqrt(46.16)))
help(pnorm)
curve(pnorm(x, mean=164, sd=sqrt(46.16),ylim=1))
curve(pnorm(x, mean=164, sd=sqrt(46.16),ylim=(0,1))
curve(pnorm(x, mean=164, sd=sqrt(46.16),ylim=(0,1)))
curve(pnorm(x, mean=164, sd=sqrt(46.16))))
probtaller175 <- 100-prob175
curve(pnorm(x, mean=164, sd=sqrt(46.16)))
help("plot")
curve(pnorm(x, mean=164, sd=sqrt(46.16)))
curve(pnorm(x, mean=164, sd=sqrt(46.16), ylim=c(0,1)))
curve(pnorm(x, mean=164, sd=sqrt(46.16), ylim=c(0,1))))
curve(pnorm(x, mean=164, sd=sqrt(46.16), ylim=c(0,1)))
curve(pnorm(x, mean=164, sd=sqrt(46.16)),ylim=c(0,1))
curve(pnorm(x, mean=164, sd=sqrt(46.16)),ylim=c(-1,1))
curve(pnorm(x, mean=164, sd=sqrt(46.16)),ylim=c(0,2))
curve(pnorm(x, mean=164, sd=sqrt(46.16)))
z=(175-164)/sqrt(46.16)
z=(175-164)/sqrt(46.16)
prob175 <- pnorm(z)
prob175 <- round(prob175*100,1)
probtaller175 <- 100-prob175
z=(175-164)/sqrt(46.16)
prob175 <- pnorm(z)
#prob175 <- round(prob175*100,1)
probtaller175 <- 100-prob175
help(qt)
t=(175-164)/sqrt(46.16)
#prob175 <- pnorm(z)
#prob175 <- round(prob175*100,1)
#probtaller175 <- 100-prob175
#curve(pnorm(x, mean=164, sd=sqrt(46.16)))
t <- pt(t=1.62,df=7236)
t=(175-164)/sqrt(46.16)
#prob175 <- pnorm(z)
#prob175 <- round(prob175*100,1)
#probtaller175 <- 100-prob175
#curve(pnorm(x, mean=164, sd=sqrt(46.16)))
td <- pt(t=1.62,df=7236)
t=(175-164)/sqrt(46.16)
#prob175 <- pnorm(z)
#prob175 <- round(prob175*100,1)
#probtaller175 <- 100-prob175
#curve(pnorm(x, mean=164, sd=sqrt(46.16)))
td <- pt(t,df=7236)
beta <- 0.2 # Set maximally acceptable probability of type II error.
pwr.norm.test(d= delta/sigma, n=NULL, sig.level=0.05, power=1-beta, alternative="greater")
install.packages("pwr")
library(pwr)
delta <- 40
sigma <- 25
pwr.norm.test(d= delta/sigma, n=NULL, sig.level=0.05, power=1-beta, alternative="greater")
library(pwr)
library(pwr)
delta <- 40
sigma <- 25
pwr.norm.test(d= delta/sigma, n=NULL, sig.level=0.05, power=1-beta, alternative="greater")
pwr.norm.test(d= NULL, n=5, sig.level=0.05, power=1-beta, alternative="greater")
help(pwr.norm.test)
library(pwr)
delta <- 40
sigma <- 25
pwr.norm.test(d= delta/sigma, n=NULL, sig.level=0.05, power=1-beta, alternative="greater")
beta
pwr.norm.test(d= delta/sigma, n=NULL, sig.level=0.05, power=1-beta, alternative="two.sided")
pwr.norm.test(d= delta/sigma, n=NULL, sig.level=0.05, power=1-beta, alternative="greater")
pwr.norm.test(d= delta/sigma, n=5, sig.level=0.05, power=1-beta, alternative="greater")
pwr.norm.test(d= delta/sigma, n=NULL, sig.level=0.05, power=1-beta, alternative="greater")
pwr.norm.test(d= delta/sigma, n=NULL, sig.level=0.05, power=1-beta, alternative="greater")
library("pwr", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(pwr)
delta <- 40
sigma <- 25
pwr.norm.test(d= delta/sigma, n=NULL, sig.level=0.05, power=1-beta, alternative="greater")
library(pwr)
delta <- 40
sigma <- 25
pwr.norm.test(d= delta/sigma, n=NULL, sig.level=0.05, power=1-beta, alternative="greater")
?mean
?frequency
??frequency
help("mean")
3+4
5*8
sqrt(4)
((((25*8)-33)+sqrt(49))/12345^(0.24)
6
(((25*8)-33)+sqrt(49))/12345^(0.24)
((((25*8)-33)+sqrt(49))/12345)^(0.24)
result <- ((((25*8)-33)+sqrt(49))/12345)^(0.24)
result
result2 <- result -0.359562
result2
5*(4-2)
?clearNames
profit
(profit<-days*geese*(gain-loss))
(profit<-days*geese*(gain-loss))
(profit<-day*geese*(gain-loss))
(profit<-day*geese*(gain-loss))
gain<-4
loss<-2
geese<-5
days<-7
profit<-days*geese*(gain-loss)
(profit<-days*geese*(gain-loss))
gain<-4
loss<-2
geese<-5
days<-7
profit<-days*geese*(gain-loss)
gain<-4
loss<-2
geese<-5
days<-7
profit<-days*geese*(gain-loss)
profit
help("clear")
install.packages("ggplot2")
detach("package:methods", unload=TRUE)
detach("package:graphics", unload=TRUE)
detach("package:grDevices", unload=TRUE)
install.packages("ggplot2")
detach("package:stats", unload=TRUE)
detach("package:utils", unload=TRUE)
detach("package:datasets", unload=TRUE)
install.packages("ggplot2")
library(grid)
detach("package:grid", unload=TRUE)
detach("package:graphics", unload=TRUE)
detach("package:grDevices", unload=TRUE)
library("grDevices", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("graphics", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages("ggplot2")
version
sessionInfo()
install.packages("ggplot2")
remove.packages("ggplot2")
install.packages("ggplot2")
version
sessionInfo()
help(package = "ggplot2")
library(ggplot2)
help(package = "ggplot2")
detach("ggplot2, unload = TRUE")
detach("ggplot2", unload = TRUE)
detach("package:ggplot2", unload=TRUE)
help(package="ggplot2")
browseVignettes("ggplot2")
setwd("~/Desktop/R")
install.packages("ggplot2")
example <- matrix(c(1, 2, 3, 4, 5, 6, 7, 8), nrow = 4, ncol = 2)
View(example)
source("https://bioconductor.org/biocLite.R")
install.packages("KernSmooth")
library(KernSmooth)
